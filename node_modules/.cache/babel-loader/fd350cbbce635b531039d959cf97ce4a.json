{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Documents/REACT/state-events/src/Counter.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Counter extends Component {\n  constructor() {\n    super();\n\n    this.decrease = event => {\n      this.setState({\n        count: this.state.count - 1\n      });\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  reset(event) {\n    this.setState({\n      count: 0\n    });\n  }\n\n  increase() {\n    this.setState({\n      count: this.state.count + 1\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Q2. Create a counter with increment, decrement and reset functionality.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"parent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Counter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: '8vw'\n            },\n            children: this.state.count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.decrease,\n            children: \"DECREASE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.reset,\n            children: \"RESET\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.increase,\n            children: \"INCREASE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"names":["React","Component","Counter","constructor","decrease","event","setState","count","state","reset","increase","render","color","fontSize"],"sources":["/home/cedcoss/Documents/REACT/state-events/src/Counter.js"],"sourcesContent":["import React, { Component } from 'react'\nimport './style.css'\nexport default class Counter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0\n    };\n  }\n  decrease = (event) => {\n    this.setState({\n      count:this.state.count-1,\n    })\n  }\n\n  reset(event){\n    this.setState({\n      count: 0,\n    })\n  }\n\n  increase() {\n    this.setState({\n      count: this.state.count+1,\n    })\n  }\n\n  render() {\n    return (\n<>\n<h1 style={{color:'white'}}>Q2. Create a counter with increment, decrement and reset functionality.</h1>\n      <div id='parent' >\n\n        <h1>Counter</h1>\n\n        <div>\n          <h1 style={{ fontSize: '8vw' }}>{this.state.count}</h1>\n\n          <button onClick={this.decrease}>DECREASE</button>\n          <button onClick={this.reset}>RESET</button>\n          <button onClick={this.increase}>INCREASE</button>\n        </div>\n\n      </div>\n      </>\n    )\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;;;AACA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;EAC7CE,WAAW,GAAG;IACZ;;IADY,KAMdC,QANc,GAMFC,KAAD,IAAW;MACpB,KAAKC,QAAL,CAAc;QACZC,KAAK,EAAC,KAAKC,KAAL,CAAWD,KAAX,GAAiB;MADX,CAAd;IAGD,CAVa;;IAEZ,KAAKC,KAAL,GAAa;MACXD,KAAK,EAAE;IADI,CAAb;EAGD;;EAODE,KAAK,CAACJ,KAAD,EAAO;IACV,KAAKC,QAAL,CAAc;MACZC,KAAK,EAAE;IADK,CAAd;EAGD;;EAEDG,QAAQ,GAAG;IACT,KAAKJ,QAAL,CAAc;MACZC,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAiB;IADZ,CAAd;EAGD;;EAEDI,MAAM,GAAG;IACP,oBACJ;MAAA,wBACA;QAAI,KAAK,EAAE;UAACC,KAAK,EAAC;QAAP,CAAX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEM;QAAK,EAAE,EAAC,QAAR;QAAA,wBAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAIE;UAAA,wBACE;YAAI,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAZ,CAAX;YAAA,UAAiC,KAAKL,KAAL,CAAWD;UAA5C;YAAA;YAAA;YAAA;UAAA,QADF,eAGE;YAAQ,OAAO,EAAE,KAAKH,QAAtB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAQ,OAAO,EAAE,KAAKK,KAAtB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF,eAKE;YAAQ,OAAO,EAAE,KAAKC,QAAtB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFN;IAAA,gBADI;EAkBD;;AA5C4C"},"metadata":{},"sourceType":"module"}